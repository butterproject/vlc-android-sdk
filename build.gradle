buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0-beta03'
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.github.dcendents.android-maven' version '1.5'
}

apply from: './config/dependencies.gradle'

apply plugin: 'com.android.library'

version = VERSION_NAME
group = GROUP

repositories {
    jcenter()
    google()
}

android {
    compileSdkVersion rootProject.ext.compileSdk

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionName VERSION_NAME

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    api "androidx.annotation:annotation:$rootProject.ext.androidxAnnotationVersion"
    api "androidx.legacy:legacy-support-v4:$rootProject.ext.androidxLegacyVersion"
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key =  System.getenv('BINTRAY_KEY')

    publish = true

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = ARTIFACT
        desc = DESCRIPTION
        userOrg = ORGANIZATION
        websiteUrl = REPO_URL
        issueTrackerUrl = URL_ISSUES
        vcsUrl = SCM_URL
        licenses = ['GPL-3.0']
        labels = ['android', 'vlc', 'video', 'player']
        publicDownloadNumbers = true

        githubRepo = 'butterproject/vlc-android-sdk'
        githubReleaseNotesFile = 'README.md'
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging PACKAGING
                artifactId ARTIFACT
                name PROJECT_NAME
                url REPO_URL
                licenses {
                    license {
                        name LICENSE_NAME
                        url LICENSE_URL
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id "aldoborrero"
                        name "Aldo Borrero"
                    }
                    developer {
                        id "blazsolar"
                        name "Blaz Solar"
                    }
                }
                scm {
                    url REPO_URL
                    connection SCM_URL
                    developerConnection SCM_URL
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options {
        encoding = 'UTF-8'
        failOnError false
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
